services:
  app:
    image: catchoco/vision-to-tag
    container_name: vision-to-tag
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file:
      - .env
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    volumes:
      - ./logs:${LOG_DIR}
      - ./download:${DOWNLOAD_DIR}
      - ./app:/app/app
      - ./.env:/app/.env
      - ./main.py:/app/main.py
      - ./clean_videos.py:/app/clean_videos.py
      - ./supervisor:/etc/supervisor/conf.d
    depends_on:
      - redis
    networks:
      - vision_net
    command: >
      sh -c '
        supervisord -c /etc/supervisor/conf.d/supervisord.conf &
        python main.py &
        (crontab -l 2>/dev/null; echo "0 3 * * * cd /app && python clean_videos.py") | crontab -
        service cron start && tail -f /dev/null'


  redis:
    image: redis:7-alpine
    container_name: vision-to-tag-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    env_file:
      - .env
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - vision_net


  mysql:
    image: mysql:8.0
    container_name: vision-to-tag-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Shanghai
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mysql/data:/var/lib/mysql
      - ./mysql/migrations:/etc/mysql/migrations
    restart: unless-stopped
    networks:
      - vision_net
    command: --default-authentication-plugin=mysql_native_password


volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  vision_net:
    driver: bridge
